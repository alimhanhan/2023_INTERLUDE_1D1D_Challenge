# -*- coding: utf-8 -*-
"""ROT128_Decrypt.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r78Fhf-OrQsT7Twe2izIF7t4sFiDOo5B
"""

def decrypt(hex_str):
    hex_list = [(hex(i)[2:].zfill(2).upper()) for i in range(256)]

    # 문자열을 2개씩 잘라 리스트로 변환
    enc_list = [hex_str[i:i+2] for i in range(0, len(hex_str), 2)]

    # 복호화된 값을 저장할 리스트 초기화
    dec_list = list(range(len(enc_list)))

    # 암호화 과정을 거꾸로 수행
    for i in range(len(enc_list)):
        hex_b = enc_list[i]
        index = hex_list.index(hex_b)
        dec_list[i] = hex_list[(index - 128) % len(hex_list)]

    # 리스트를 문자열로 변환
    dec_str = ''.join(dec_list)

    # 16진수 문자열을 바이트 데이터로 변환
    decoded_data = bytes.fromhex(dec_str)

    return decoded_data


def main():
    # encfile 읽기
    with open('/content/encfile', 'r', encoding='utf-8') as f:
        enc_str = f.read()

    # 암호화된 문자열을 복호화하여 바이트 데이터로 얻기
    decrypted_data = decrypt(enc_str)

    # 바이트 데이터를 'flag.png' 파일로 저장
    with open('/content/flag.png', 'wb') as f:
        f.write(decrypted_data)

if __name__ == "__main__":
    main()