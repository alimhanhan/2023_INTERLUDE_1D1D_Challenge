# -*- coding: utf-8 -*-
"""Basic_Crypto1_Decoding_Script.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u15fWn7LWWG_hy0mnwsKQmnCpu-RTV89
"""

def caesar_decrypt(ciphertext, shift):
    decrypted_text = ""  # 해독된 텍스트를 저장할 변수 초기화

    for char in ciphertext:
        if char.isalpha():  # 알파벳인지 확인
            ascii_offset = ord('A') if char.isupper() else ord('a')  # 대문자와 소문자의 ASCII 코드 시작값을 결정
            decrypted_char = chr((ord(char) - ascii_offset - shift) % 26 + ascii_offset)
            # 암호문 문자의 ASCII 코드 값에서 시작값을 뺀 뒤, 시저 암호의 키를 뺀 값에 대한 모듈로 연산 수행 후 다시 시작값을 더하여 해독 문자 구함
            decrypted_text += decrypted_char  # 해독 문자를 해독된 텍스트에 추가
        else:
            decrypted_text += char  # 알파벳이 아니라면 그대로 추가 (공백, 특수문자 등)

    return decrypted_text  # 전체 문장을 해독하여 반환

ciphertext = "EDVLF FUBSWR GUHDPKDFN"  # 암호문
for shift in range(1, 26):  # 모든 가능한 암호 키에 대해 반복
    decrypted_message = caesar_decrypt(ciphertext, shift)  # 해당 암호 키로 암호문 해독
    print(f"Shift {shift}: {decrypted_message}")  # 암호 키와 해당 키로 해독된 결과 출력